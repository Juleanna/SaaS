# Generated by Django 5.2.4 on 2025-07-29 11:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stores', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramBot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bot_token', models.CharField(max_length=100, verbose_name='Токен бота')),
                ('bot_username', models.CharField(max_length=50, verbose_name='Username бота')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активний')),
                ('welcome_message', models.TextField(blank=True, verbose_name='Привітальне повідомлення')),
                ('help_message', models.TextField(blank=True, verbose_name='Повідомлення допомоги')),
                ('notify_new_orders', models.BooleanField(default=True, verbose_name='Сповіщати про нові замовлення')),
                ('notify_status_changes', models.BooleanField(default=True, verbose_name='Сповіщати про зміну статусу')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата створення')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата оновлення')),
                ('store', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='telegram_bot', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Telegram бот',
                'verbose_name_plural': 'Telegram боти',
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Telegram ID')),
                ('username', models.CharField(blank=True, max_length=50, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name="Ім'я")),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Прізвище')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активний')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Заблокований')),
                ('language_code', models.CharField(default='uk', max_length=10, verbose_name='Мова')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата реєстрації')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Остання активність')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Користувач системи')),
            ],
            options={
                'verbose_name': 'Telegram користувач',
                'verbose_name_plural': 'Telegram користувачі',
            },
        ),
        migrations.CreateModel(
            name='TelegramMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.BigIntegerField(verbose_name='ID повідомлення')),
                ('message_type', models.CharField(choices=[('text', 'Текст'), ('photo', 'Фото'), ('video', 'Відео'), ('document', 'Документ'), ('location', 'Локація'), ('contact', 'Контакт')], default='text', max_length=20, verbose_name='Тип повідомлення')),
                ('text', models.TextField(blank=True, verbose_name='Текст')),
                ('data', models.JSONField(blank=True, default=dict, verbose_name='Додаткові дані')),
                ('is_from_bot', models.BooleanField(default=False, verbose_name='Від бота')),
                ('is_handled', models.BooleanField(default=False, verbose_name='Оброблено')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата створення')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telegram_messages', to='stores.store', verbose_name='Магазин')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='telegram_bot.telegramuser', verbose_name='Користувач')),
            ],
            options={
                'verbose_name': 'Telegram повідомлення',
                'verbose_name_plural': 'Telegram повідомлення',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TelegramSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_state', models.CharField(default='main_menu', max_length=50, verbose_name='Поточний стан')),
                ('context_data', models.JSONField(blank=True, default=dict, verbose_name='Дані контексту')),
                ('cart_items', models.JSONField(blank=True, default=list, verbose_name='Товари в кошику')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата створення')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата оновлення')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telegram_sessions', to='stores.store', verbose_name='Магазин')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='telegram_bot.telegramuser', verbose_name='Користувач')),
            ],
            options={
                'verbose_name': 'Telegram сесія',
                'verbose_name_plural': 'Telegram сесії',
                'unique_together': {('user', 'store')},
            },
        ),
    ]
